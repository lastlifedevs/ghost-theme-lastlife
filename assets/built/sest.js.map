{"version":3,"sources":["sest.js"],"names":["GRADIENT_PREFIX","FIELD_GROUP_PREFIX","updateRange","rangeElem","$elem","$","prop","data","value","val","css","updateJsColor","jsColorElem","valueElement","complementaryProp","complementaryPropVal","toHEXString","hsl","rgbToHsl","rgb","Math","round","toString","lum","lumAdj","substring","length","fieldGroupIndex","undefined","fgFields","i","fgFieldValue","$elems","currentElem","currentComplVal","indexOf","r","g","b","h","max","min","d","l","abs","outputSeStPrefs","output","$fields","$f","$fieldGroups","$fgFields","find","j","refreshSeStPrefs","$sestForm","$rangeElems","$jscolorElems","jscolor","fromString","applySeStPrefs","prefs","prefsArray","split","pref","startsWith","$sestControl","fgVals","attr","hasClass","loadedPrefs","localStorage","getItem","click","slideDown","slideUp","on","this","submit","event","setItem","preventDefault","reset"],"mappings":"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","file":"sest.js","sourceRoot":"/source/","sourcesContent":["/*!\r\n * SelfStyle (SeSt)\r\n *\r\n * Copyright 2018 Joshua Balanuik\r\n * Released under the Apache License 2.0\r\n */\r\n\r\n/**\r\n * Prefix used for CSS properties that will have a gradient value. \r\n * For example, a gradient background would be `grad-background`, \r\n * a gradient border-image would be `grad-border-image`.\r\n */\r\nconst GRADIENT_PREFIX = 'grad-';\r\n\r\n/**\r\n * Prefix used to indicate a saved SeSt preference is a field group.\r\n */\r\nconst FIELD_GROUP_PREFIX = 'fieldGroup:';\r\n\r\n/**\r\n * Updates a `range`-type SeSt input element on request or in real-time.\r\n * \r\n * @param {jQuery} rangeElem - the jQuery-selected SeSt `range`-type input element.\r\n */\r\nfunction updateRange(rangeElem) {\r\n    var $elem = $(rangeElem);\r\n    var prop = $elem.data('prop');\r\n    var value = '';\r\n    switch (prop) {\r\n        case 'color':\r\n            // Used only to set brightness of 0 sat 0 hue colours.\r\n            value = 'rgb(' + $elem.val() + ',' + $elem.val() + ',' + $elem.val() + ')';\r\n            $elem.data('val', $elem.val());\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    $($elem.data('sel')).css(prop, value);\r\n}\r\n\r\n/**\r\n * Updates a jsColor (http://jscolor.com/) SeSt control element in real-time.\r\n * \r\n * @param {jsColor} jsColorElem - the jsColor element as passed by the jsColor library.\r\n */\r\nfunction updateJsColor(jsColorElem) {\r\n    var $elem = $(jsColorElem.valueElement);\r\n    var prop = $elem.data('prop');\r\n    var value = '';\r\n    let complementaryProp = '';\r\n    let complementaryPropVal = '';\r\n\r\n    switch (prop) {\r\n        case 'color':\r\n        case 'background':\r\n            value = jsColorElem.toHEXString();\r\n            $elem.data('val', value);\r\n            complementaryProp = 'box-shadow';\r\n            let hsl = rgbToHsl(jsColorElem.rgb[0], jsColorElem.rgb[1], jsColorElem.rgb[2]);\r\n            hsl[0] = Math.round(hsl[0]).toString();\r\n            hsl[1] = Math.round(hsl[1]*100).toString() + '%';\r\n            let lum = Math.round(hsl[2]*100);\r\n            let lumAdj = lum + lum/2;\r\n            if (lumAdj > 100) {\r\n                lumAdj = lum/2;\r\n            } \r\n            hsl[2] = lumAdj.toString() + '%';\r\n            complementaryPropVal = 'hsl(' + hsl[0] + ',' + hsl[1] + ',' + hsl[2] + ')';\r\n            break;\r\n        case 'grad-background':\r\n            prop = prop.substring(GRADIENT_PREFIX.length);\r\n            // Get the field group this color stop belongs to.\r\n            let fieldGroupIndex = $elem.data('fg');\r\n            if (fieldGroupIndex === undefined) return;\r\n            let fgFields = $(\".sest-field-group [data-fg=\" + fieldGroupIndex + \"]\");\r\n            value = \"linear-gradient(#\";\r\n            for (let i = 0; i < fgFields.length; i++) {\r\n                let fgFieldValue = fgFields[i].value;\r\n                value += fgFieldValue;\r\n                $(fgFields[i]).data('val', fgFieldValue);\r\n                if (i !== fgFields.length - 1) {\r\n                    value += \", #\"\r\n                }\r\n            }\r\n            value += \")\";\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    if (complementaryProp) {\r\n        let $elems = $($elem.data('sel'));\r\n        switch (complementaryProp) {\r\n            case 'box-shadow':\r\n                for (let i = 0; i < $elems.length; i++) {\r\n                    let currentElem = $elems[i];\r\n                    $(currentElem).css(prop,value);\r\n                    let currentComplVal = $(currentElem).css(complementaryProp);\r\n                    if (currentComplVal) {\r\n                        $(currentElem).css(complementaryProp, complementaryPropVal + currentComplVal.substring(currentComplVal.indexOf(')') + 1));\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    } else {\r\n        $($elem.data('sel')).css(prop, value);\r\n    }\r\n}\r\n\r\n/** RGB to HSL conversion for the computation of certain complementary property values. */\r\nfunction rgbToHsl(r, g, b) {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n    let max = Math.max(r, g, b);\r\n    let min = Math.min(r, g, b);\r\n    let d = max - min;\r\n    let h;\r\n    if (d === 0) h = 0;\r\n    else if (max === r) h = (g - b) / d % 6;\r\n    else if (max === g) h = (b - r) / d + 2;\r\n    else if (max === b) h = (r - g) / d + 4;\r\n    let l = (min + max) / 2;\r\n    let s = d === 0 ? 0 : d / (1 - Math.abs(2 * l - 1));\r\n    return [h * 60, s, l];\r\n}\r\n\r\n/**\r\n * Returns a single string containing all SeSt preferences, to be saved in localstorage, \r\n * or possibly exported/imported. Each SeSt preference string contains a CSS selector,\r\n * the name of the CSS property to be modified, and the value of the SeSt input(s).\r\n * Note that the value of the SeSt input is not necessarily a valid CSS property value.\r\n */\r\nfunction outputSeStPrefs() {\r\n    var output = '';\r\n\r\n    // Get individual SeSt input fields.\r\n    var $fields = $(\"#sest-form input.sest-field\");\r\n    for (let i = 0; i < $fields.length; i++) {\r\n        var $f = $($fields[i]);\r\n        // e.g. '.header-block/background/131313'\r\n        output += $f.data('sel') + '/' + $f.data('prop') + '/' + $f.data('val');\r\n        if (i !== $fields.length - 1) {\r\n            output += '\\\\';\r\n        }\r\n    }\r\n\r\n    // Get SeSt field groups.\r\n    var $fieldGroups = $(\"#sest-form .sest-field-group\");\r\n    if (output !== '' && $fieldGroups.length > 0) {\r\n        output += '\\\\';\r\n    }\r\n    for (let i = 0; i < $fieldGroups.length; i++) {\r\n        output += FIELD_GROUP_PREFIX;\r\n\r\n        // Get the array of fields within the field group\r\n        let $fgFields = $($fieldGroups[i]).find('input');\r\n\r\n        // use the data on the first input element to populate the first part of the SeSt preference\r\n        // e.g. output = 'fieldGroup:.article-body .text-field/grad-background/'\r\n        output += $($fgFields[0]).data('sel') + '/' + $($fgFields[0]).data('prop') + '/';\r\n\r\n        for (let j = 0; j < $fgFields.length; j++) {\r\n            output += '#' + $($fgFields[j]).data('val');\r\n            if (j !== $fgFields.length - 1) {\r\n                output += ',';\r\n            }\r\n        }\r\n        // e.g. 'fieldGroup:.article-body .text-field/grad-background/#121212,#323232,#434343'\r\n        if (i !== $fieldGroups.length - 1) {\r\n            output += '\\\\';\r\n        }\r\n    }\r\n    return output;\r\n}\r\n\r\nfunction refreshSeStPrefs() {\r\n    // TODO: Add any other input types.\r\n    let $sestForm = $(\"#sest-form\");\r\n    let $rangeElems = $sestForm.find(\"input[type=range]\");\r\n    for (let i = 0; i < $rangeElems.length; i++) {\r\n        updateRange($($rangeElems[i]));\r\n    }\r\n    let $jscolorElems = $sestForm.find('input.jscolor');\r\n    for (let i = 0; i < $jscolorElems.length; i++) {\r\n        $jscolorElems[i].jscolor.fromString($jscolorElems[i].value);\r\n        updateJsColor($jscolorElems[i].jscolor);\r\n    }\r\n}\r\n\r\nfunction applySeStPrefs(prefs) {\r\n    var prefsArray = prefs.split('\\\\');\r\n    for (let i = 0; i < prefsArray.length; i++) {\r\n        let pref = prefsArray[i].split('/');\r\n\r\n        if (pref[0].startsWith(FIELD_GROUP_PREFIX)) {\r\n            // Remove the field group prefix.\r\n            pref[0] = pref[0].substring(FIELD_GROUP_PREFIX.length, pref[0].length);\r\n            let $sestControl = $(\"input[data-sel='\" + pref[0] + \"'][data-prop='\" + pref[1] + \"']\");\r\n            switch (pref[1]) {\r\n                case 'grad-background':\r\n                    pref[1] = pref[1].substring(GRADIENT_PREFIX.length);\r\n                    $(pref[0]).css(pref[1], 'linear-gradient(' + pref[2] + ')');\r\n                    let fgVals = pref[2].split(',');\r\n                    for (let j = 0; j < fgVals.length; j++) {\r\n                        let val = fgVals[j].substring(1);\r\n                        $sestControl[j].jscolor.fromString(val);\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            let $sestControl = $(\"input[data-sel='\" + pref[0] + \"'][data-prop='\" + pref[1] + \"']\");\r\n            if ($sestControl.attr('type') === 'range') {\r\n                $sestControl.val(pref[2]);\r\n                updateRange($sestControl);\r\n            } else if ($sestControl.hasClass('jscolor')) {\r\n                $sestControl[0].jscolor.fromString(pref[2]);\r\n                updateJsColor($sestControl[0].jscolor);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n$(function() {\r\n    var loadedPrefs = localStorage.getItem('sest-prefs');\r\n    if (loadedPrefs !== null) {\r\n        applySeStPrefs(loadedPrefs);\r\n    }\r\n\r\n    $(\"#sest-toggle\").css('display', 'block');\r\n\r\n    $(\"#sest-toggle\").click(function() {\r\n        $(\"#selfstyle\").slideDown();\r\n    });\r\n\r\n    $(\"#sest-close-btn\").click(function() {\r\n        $(\"#selfstyle\").slideUp();\r\n    });\r\n\r\n    $(\".sest-form-row input[type=range]\").on(\"change mousemove\", function() {\r\n        updateRange($(this));\r\n    });\r\n\r\n    $(\"#sest-form\").submit(function(event) {\r\n        localStorage.setItem('sest-prefs', outputSeStPrefs());\r\n        event.preventDefault();\r\n    });\r\n\r\n    $(\"#sest-form button[type='reset']\").click(function(event) {\r\n        event.preventDefault();\r\n        $(\"#sest-form\")[0].reset();\r\n        refreshSeStPrefs();\r\n    });\r\n});"]}