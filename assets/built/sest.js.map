{"version":3,"sources":["sest.js"],"names":["GRADIENT_PREFIX","FIELD_GROUP_PREFIX","updateRange","rangeElem","$elem","$","prop","data","value","val","css","updateJsColor","jsColorElem","valueElement","toHEXString","substring","length","fieldGroupIndex","undefined","fgFields","i","fgFieldValue","outputSeStPrefs","output","$fields","$f","$fieldGroups","$fgFields","find","j","refreshSeStPrefs","$sestForm","$rangeElems","$jscolorElems","jscolor","fromString","applySeStPrefs","prefs","prefsArray","split","pref","startsWith","$sestControl","fgVals","attr","hasClass","loadedPrefs","localStorage","getItem","click","slideDown","slideUp","on","this","submit","event","setItem","preventDefault","reset"],"mappings":"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","file":"sest.js","sourceRoot":"/source/","sourcesContent":["/*!\r\n * SelfStyle (SeSt)\r\n *\r\n * Copyright 2018 Joshua Balanuik\r\n * Released under the Apache License 2.0\r\n */\r\n\r\n/**\r\n * Prefix used for CSS properties that will have a gradient value. \r\n * For example, a gradient background would be `grad-background`, \r\n * a gradient border-image would be `grad-border-image`.\r\n */\r\nconst GRADIENT_PREFIX = 'grad-';\r\n\r\n/**\r\n * Prefix used to indicate a saved SeSt preference is a field group.\r\n */\r\nconst FIELD_GROUP_PREFIX = 'fieldGroup:';\r\n\r\n/**\r\n * Updates a `range`-type SeSt input element on request or in real-time.\r\n * \r\n * @param {jQuery} rangeElem - the jQuery-selected SeSt `range`-type input element.\r\n */\r\nfunction updateRange(rangeElem) {\r\n    var $elem = $(rangeElem);\r\n    var prop = $elem.data('prop');\r\n    var value = '';\r\n    switch (prop) {\r\n        case 'color':\r\n            // Used only to set brightness of 0 sat 0 hue colours.\r\n            value = 'rgb(' + $elem.val() + ',' + $elem.val() + ',' + $elem.val() + ')';\r\n            $elem.data('val', $elem.val());\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    $($elem.data('sel')).css(prop, value);\r\n}\r\n\r\n/**\r\n * Updates a jsColor (http://jscolor.com/) SeSt control element in real-time.\r\n * \r\n * @param {jsColor} jsColorElem - the jsColor element as passed by the jsColor library.\r\n */\r\nfunction updateJsColor(jsColorElem) {\r\n    var $elem = $(jsColorElem.valueElement);\r\n    var prop = $elem.data('prop');\r\n    var value = '';\r\n    let assign = true;\r\n\r\n    switch (prop) {\r\n        case 'color':\r\n        case 'background':\r\n            value = jsColorElem.toHEXString();\r\n            $elem.data('val', value);\r\n            break;\r\n        case 'grad-background':\r\n            prop = prop.substring(GRADIENT_PREFIX.length);\r\n            // Get the field group this color stop belongs to.\r\n            let fieldGroupIndex = $elem.data('fg');\r\n            if (fieldGroupIndex === undefined) return;\r\n            let fgFields = $(\".sest-field-group [data-fg=\" + fieldGroupIndex + \"]\");\r\n            value = \"linear-gradient(#\";\r\n            for (let i = 0; i < fgFields.length; i++) {\r\n                let fgFieldValue = fgFields[i].value;\r\n                value += fgFieldValue;\r\n                $(fgFields[i]).data('val', fgFieldValue);\r\n                if (i !== fgFields.length - 1) {\r\n                    value += \", #\"\r\n                }\r\n            }\r\n            value += \")\";\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    $($elem.data('sel')).css(prop, value);\r\n}\r\n\r\n/**\r\n * Returns a single string containing all SeSt preferences, to be saved in localstorage, \r\n * or possibly exported/imported. Each SeSt preference string contains a CSS selector,\r\n * the name of the CSS property to be modified, and the value of the SeSt input(s).\r\n * Note that the value of the SeSt input is not necessarily a valid CSS property value.\r\n */\r\nfunction outputSeStPrefs() {\r\n    var output = '';\r\n\r\n    // Get individual SeSt input fields.\r\n    var $fields = $(\"#sest-form input.sest-field\");\r\n    for (let i = 0; i < $fields.length; i++) {\r\n        var $f = $($fields[i]);\r\n        // e.g. '.header-block/background/131313'\r\n        output += $f.data('sel') + '/' + $f.data('prop') + '/' + $f.data('val');\r\n        if (i !== $fields.length - 1) {\r\n            output += '\\\\';\r\n        }\r\n    }\r\n\r\n    // Get SeSt field groups.\r\n    var $fieldGroups = $(\"#sest-form .sest-field-group\");\r\n    if (output !== '' && $fieldGroups.length > 0) {\r\n        output += '\\\\';\r\n    }\r\n    for (let i = 0; i < $fieldGroups.length; i++) {\r\n        output += FIELD_GROUP_PREFIX;\r\n\r\n        // Get the array of fields within the field group\r\n        let $fgFields = $($fieldGroups[i]).find('input');\r\n\r\n        // use the data on the first input element to populate the first part of the SeSt preference\r\n        // e.g. output = 'fieldGroup:.article-body .text-field/grad-background/'\r\n        output += $($fgFields[0]).data('sel') + '/' + $($fgFields[0]).data('prop') + '/';\r\n\r\n        for (let j = 0; j < $fgFields.length; j++) {\r\n            output += '#' + $($fgFields[j]).data('val');\r\n            if (j !== $fgFields.length - 1) {\r\n                output += ',';\r\n            }\r\n        }\r\n        // e.g. 'fieldGroup:.article-body .text-field/grad-background/#121212,#323232,#434343'\r\n        if (i !== $fieldGroups.length - 1) {\r\n            output += '\\\\';\r\n        }\r\n    }\r\n    return output;\r\n}\r\n\r\nfunction refreshSeStPrefs() {\r\n    // TODO: Add any other input types.\r\n    let $sestForm = $(\"#sest-form\");\r\n    let $rangeElems = $sestForm.find(\"input[type=range]\");\r\n    for(let i = 0; i < $rangeElems.length; i++) {\r\n        updateRange($($rangeElems[i]));\r\n    }\r\n    let $jscolorElems = $sestForm.find('input.jscolor');\r\n    for(let i = 0; i < $jscolorElems.length; i++) {\r\n        $jscolorElems[i].jscolor.fromString($jscolorElems[i].value);\r\n        updateJsColor($jscolorElems[i].jscolor);\r\n    }\r\n}\r\n\r\nfunction applySeStPrefs(prefs) {\r\n    var prefsArray = prefs.split('\\\\');\r\n    for (let i = 0; i < prefsArray.length; i++) {\r\n        let pref = prefsArray[i].split('/');\r\n\r\n        if (pref[0].startsWith(FIELD_GROUP_PREFIX)) {\r\n            // Remove the field group prefix.\r\n            pref[0] = pref[0].substring(FIELD_GROUP_PREFIX.length, pref[0].length);\r\n            let $sestControl = $(\"input[data-sel='\" + pref[0] + \"'][data-prop='\" + pref[1] + \"']\");\r\n            switch (pref[1]) {\r\n                case 'grad-background':\r\n                    pref[1] = pref[1].substring(GRADIENT_PREFIX.length);\r\n                    $(pref[0]).css(pref[1], 'linear-gradient(' + pref[2] + ')');\r\n                    let fgVals = pref[2].split(',');\r\n                    for (let j=0; j < fgVals.length; j++) {\r\n                        let val = fgVals[j].substring(1);\r\n                        $sestControl[j].jscolor.fromString(val);\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            let $sestControl = $(\"input[data-sel='\" + pref[0] + \"'][data-prop='\" + pref[1] + \"']\");\r\n            if ($sestControl.attr('type') === 'range') {\r\n                $sestControl.val(pref[2]);\r\n                updateRange($sestControl);\r\n            } else if ($sestControl.hasClass('jscolor')) {\r\n                $sestControl[0].jscolor.fromString(pref[2]);\r\n                updateJsColor($sestControl[0].jscolor);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n$(function() {\r\n    var loadedPrefs = localStorage.getItem('sest-prefs');\r\n    if (loadedPrefs !== null) {\r\n        applySeStPrefs(loadedPrefs);\r\n    }\r\n\r\n    $(\"#sest-toggle\").css('display','block');\r\n\r\n    $(\"#sest-toggle\").click(function() {\r\n        $(\"#selfstyle\").slideDown();\r\n    });\r\n\r\n    $(\"#sest-close-btn\").click(function() {\r\n        $(\"#selfstyle\").slideUp();\r\n    });\r\n\r\n    $(\".sest-form-row input[type=range]\").on(\"change mousemove\", function() {\r\n        updateRange($(this));\r\n    });\r\n\r\n    $(\"#sest-form\").submit(function(event) {\r\n        localStorage.setItem('sest-prefs', outputSeStPrefs());\r\n        event.preventDefault();\r\n    });\r\n\r\n    $(\"#sest-form button[type='reset']\").click(function(event) {\r\n        event.preventDefault();\r\n        $(\"#sest-form\")[0].reset();\r\n        refreshSeStPrefs();\r\n    });\r\n});"]}